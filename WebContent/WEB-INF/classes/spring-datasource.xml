<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="true">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClass}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="pageInterceptor" class="com.ytgrading.util.interceptor.PageInterceptor">
		<property name="properties">
			<props>
				<prop key="dialect">mysql</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath*:com/kaifantech/mappings/**/*-mapper.xml</value>
			</list>
		</property>
		<property name="typeAliasesPackage" value="com.kaifantech.entity" />
		<property name="plugins">
			<array>
				<ref bean="pageInterceptor" />
			</array>
		</property>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.kaifantech.mappings;com.ytgrading.dao;com.kaifantech.dao" />
		<property name="sqlSessionTemplateBeanName" value="sqlSession" />
	</bean>

	<tx:annotation-driven  transaction-manager="transactionManager"/>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <aop:config> <aop:pointcut expression="execution(public * com.kaifantech.component.controller.*(..))" 
		id="pointcut" /> <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="query*" propagation="REQUIRED" read-only="true" 
		/> <tx:method name="find*" propagation="REQUIRED" read-only="true" /> <tx:method 
		name="save*" propagation="REQUIRED" /> <tx:method name="delete*" propagation="REQUIRED" 
		/> <tx:method name="add*" propagation="REQUIRED" /> <tx:method name="modify*" 
		propagation="REQUIRED" /> <tx:method name="logicDelById" propagation="REQUIRED" 
		/> </tx:attributes> </tx:advice> <aop:aspectj-autoproxy proxy-target-class="true"/> 
		<bean id="log4jHandlerAOP" class="com.ytgrading.logAop.LogAopAction"></bean> 
		<aop:config proxy-target-class="true"> <aop:aspect id="logAspect" ref="log4jHandlerAOP"> 
		<aop:pointcut id="logPointCut" expression="execution(* com.kaifantech.component.controller.*.* 
		(..))" /> <aop:around method="logAll" pointcut-ref="logPointCut" /> </aop:aspect> 
		</aop:config> -->

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<!-- <context:component-scan base-package="com.ytgrading.component.timer" 
		/> -->

</beans>
